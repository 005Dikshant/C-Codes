#include<bits/stdc++.h>
using namespace std;
void findMedian(int arr[], int n){

     priority_queue<int> maxpq; //left max heap
     priority_queue<int, vector<int>, greater<int>> minpq; // right min heap
    
    for(int i = 0; i < n; i++){
        if(i == 0){
            maxpq.push(arr[i]);
            cout << maxpq.top() << endl;
            continue;
        }

        if(maxpq.top() > arr[i]){
            maxpq.push(arr[i]);
        }else{
            minpq.push(arr[i]);
        }
        
        int left = maxpq.size();
        int right = minpq.size();

        if( (left - right) > 1){
            int element = maxpq.top();
            maxpq.pop();
            minpq.push(element);
        }
        if( (right - left) > 1){
            int element = minpq.top();
            minpq.pop();
            maxpq.push(element);
        }
        

        if(maxpq.size() > minpq.size()){
            cout << maxpq.top() << endl;
        }else if(maxpq.size() == minpq.size()){
            int median = ( maxpq.top() + minpq.top() )/2;
            cout << median << endl;
        }else{
            cout << minpq.top() << endl;
        }
    }
}
int main(){
    int n;
    cin >> n;
    int *arr = new int[n];
    for(int i = 0; i < n; i++){
        cin>>arr[i];
    }
    findMedian(arr, n);
    
    delete [] arr;
    
}
